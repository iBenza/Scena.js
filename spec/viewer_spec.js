import Viewer from '../src/viewer';

// Generated by CoffeeScript 1.10.0
describe('Test of viewer.coffee', function() {
  let elements = null;
  beforeEach(function() {
    elements = [null, null, null];
    let results = [];
    for (let i in elements) {
      elements[i] = window.document.createElement('section');
      elements[i].innerHTML = '<animation>' +
                              '  <keyframe target="h1">' +
                              '  <keyframe target="h2">' +
                              '</animation>';
      results.push(window.document.body.appendChild(elements[i]));
    }
  });

  afterEach(function() {
    for (let i in elements) {
      window.document.body.removeChild(elements[i]);
    }
    elements = null;
  });

  it('skips to aspecified page', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(2);
    expect(viewer.getCurrentIndex()).to.equal(2);
  });

  it('fires a keyframe if the page has keyframes', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(0);
    expect(viewer.currentAnimation.index).to.equal(0);
    viewer.step();
    expect(viewer.currentAnimation.index).to.equal(1);
    viewer.step();
    expect(viewer.currentAnimation.index).to.equal(2);
  });

  it('moves to a next page if the page has no-keyframes', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(0);
    viewer.step();
    viewer.step();
    viewer.step();
    expect(viewer.currentAnimation.keyframes.length).to.equal(2);
    expect(viewer.getCurrentIndex()).to.equal(1);
  });

  it('skips to aspecified page and remove a keyframe if keyframes remain', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(0);
    viewer.step();
    viewer.skipTo(2);
    expect(viewer.getCurrentIndex()).to.equal(2);
    expect(viewer.currentAnimation.keyframes.length).to.equal(2);
  });

  xit('animates to aspecified page', function() {});

  it('skips to aspecified page', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(2);
    expect(viewer.getCurrentIndex()).to.equal(2);
  });

  it('skips to next page', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(1);
    viewer.skipNext();
    expect(viewer.getCurrentIndex()).to.equal(2);
  });

  it('skips to previous page', function() {
    let viewer = Libretto.viewer();
    viewer.skipTo(1);
    viewer.skipPrev();
    expect(viewer.getCurrentIndex()).to.equal(0);
  });
});
